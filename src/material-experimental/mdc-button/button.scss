@use 'sass:map';
@use '@angular/material' as mat;
@use '@material/button/button' as mdc-button;
@use '@material/button/button-base' as mdc-button-base;
@use '@material/button/variables' as mdc-button-variables;
@use '@material/button/button-text-theme' as mdc-button-text-theme;
@use '@material/button/button-filled-theme' as mdc-button-filled-theme;
@use '@material/button/button-protected-theme' as mdc-button-protected-theme;
@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;

@use '../mdc-core/mdc-helpers/mdc-helpers';
@use './button-base';

@include mdc-helpers.disable-fallback-declarations {
  @include mdc-button.static-styles-without-ripple($query: mdc-helpers.$mat-base-styles-query);

  // Keys to exclude from the MDC theme config, allowing us to drop styles we don't need.
  $override-keys: button-base.mat-private-button-remove-ripple((
    label-text-font: null,
    label-text-size: null,
    label-text-tracking: null,
    label-text-transform: null,
    label-text-weight: null,
    with-icon-icon-size: null,
    label-text-color: inherit,
  ));

  // Note that we don't include a feature query, because this mixins declare
  // all the "slots" for CSS variables that will be defined in the theme.
  .mat-mdc-button {
    @include mdc-button-text-theme.theme-styles(
      map.merge(mdc-button-text-theme.$light-theme, $override-keys));
  }

  .mat-mdc-unelevated-button {
    @include mdc-button-filled-theme.theme-styles(
      map.merge(map.merge(mdc-button-filled-theme.$light-theme, $override-keys), (
        container-color: transparent,
      )));
  }

  .mat-mdc-raised-button {
    @include mdc-button-protected-theme.theme-styles(
      map.merge(map.merge(mdc-button-protected-theme.$light-theme, $override-keys), (
        container-color: transparent,
      )));
  }

  .mat-mdc-outlined-button {
    @include mdc-button-outlined-theme.theme-styles(
      map.merge(mdc-button-outlined-theme.$light-theme, $override-keys));
  }
}

.mat-mdc-button,
.mat-mdc-unelevated-button,
.mat-mdc-raised-button,
.mat-mdc-outlined-button {
  @include button-base.mat-private-button-interactive();
  @include button-base.mat-private-button-disabled();
  @include button-base.mat-private-button-touch-target(false);
  @include mat.private-animation-noop();
}

// MDC expects button icons to contain this HTML content:
// ```html
//   <span class="mdc-button__icon material-icons">favorite</span>
// ```
// However, Angular Material expects a `mat-icon` instead. The following
// mixins will style the icons appropriately.
.mat-mdc-button {
  & > .mat-icon {
    @include mdc-button-base.icon();
  }
  .mdc-button__label + .mat-icon {
    @include mdc-button-base.icon-trailing();
  }
}

.mat-mdc-unelevated-button,
.mat-mdc-raised-button,
.mat-mdc-outlined-button {
  // Icons inside contained buttons have different styles due to increased button padding
  & > .mat-icon {
    @include mdc-button-base.icon();
    @include mdc-button-base.icon-contained();
  }

  .mdc-button__label + .mat-icon {
    @include mdc-button-base.icon-contained-trailing();
  }
}

// Since the stroked button has has an actual border that reduces the available space for
// child elements such as the ripple container or focus overlay, an inherited border radius
// for the absolute-positioned child elements does not work properly. This is because the
// child element cannot expand to the same boundaries as the parent element with a border.
// In order to work around this issue by *not* hiding overflow, we adjust the child elements
// to fully cover the actual button element. This means that the border-radius would be correct
// then. See: https://github.com/angular/components/issues/13738
.mat-mdc-outlined-button .mat-mdc-button-ripple,
.mat-mdc-outlined-button .mdc-button__ripple {
  $offset: -(mdc-button-variables.$outlined-border-width);
  top: $offset;
  left: $offset;
  bottom: $offset;
  right: $offset;
  border-width: $offset;
}

// For the button element, default inset/offset values are necessary to ensure that
// the focus indicator is sufficiently contrastive and renders appropriately.
.mat-mdc-unelevated-button,
.mat-mdc-raised-button {
  .mat-mdc-focus-indicator::before {
    $default-border-width: mat.$private-strong-focus-indicators-default-border-width;
    $border-width: var(--mat-mdc-focus-indicator-border-width, #{$default-border-width});
    $offset: calc(#{$border-width} + 2px);
    margin: calc(#{$offset} * -1);
  }
}

.mat-mdc-outlined-button .mat-mdc-focus-indicator::before {
  $default-border-width: mat.$private-strong-focus-indicators-default-border-width;
  $border-width: var(--mat-mdc-focus-indicator-border-width, #{$default-border-width});
  $offset: calc(#{$border-width} + 3px);
  margin: calc(#{$offset} * -1);
}
