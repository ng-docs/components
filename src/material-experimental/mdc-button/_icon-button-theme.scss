@use '@material/icon-button/mixins' as mdc-icon-button;
@use '@material/ripple/ripple-theme' as mdc-ripple-theme;
@use '../mdc-helpers/mdc-helpers';
@use '../../material/core/theming/theming';
@use '../../material/core/typography/typography';
@use './button-theme-private';

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  @include mdc-helpers.mat-using-mdc-theme($config) {
    .mat-mdc-icon-button {
      @include mdc-ripple-theme.states(
          $query: mdc-helpers.$mat-theme-styles-query,
          $ripple-target: button-theme-private.$button-state-target);

      &.mat-primary {
        @include mdc-ripple-theme.states-base-color(primary,
          $query: mdc-helpers.$mat-theme-styles-query,
          $ripple-target: button-theme-private.$button-state-target);
        @include mdc-icon-button.ink-color(primary, $query: mdc-helpers.$mat-theme-styles-query);
        @include button-theme-private.ripple-ink-color(primary);
      }

      &.mat-accent {
        @include mdc-ripple-theme.states-base-color(secondary,
          $query: mdc-helpers.$mat-theme-styles-query,
          $ripple-target: button-theme-private.$button-state-target);
        @include mdc-icon-button.ink-color(secondary, $query: mdc-helpers.$mat-theme-styles-query);
        @include button-theme-private.ripple-ink-color(secondary);
      }

      &.mat-warn {
        @include mdc-ripple-theme.states-base-color(error,
          $query: mdc-helpers.$mat-theme-styles-query,
          $ripple-target: button-theme-private.$button-state-target);
        @include mdc-icon-button.ink-color(error, $query: mdc-helpers.$mat-theme-styles-query);
        @include button-theme-private.ripple-ink-color(error);
      }

      @include button-theme-private.apply-disabled-style() {
        @include button-theme-private.apply-disabled-color();
      }
    }

    @include mdc-icon-button.without-ripple($query: mdc-helpers.$mat-theme-styles-query);
  }
}

@mixin typography($config-or-theme) {
  $config: typography.private-typography-to-2018-config(
      theming.get-typography-config($config-or-theme));
  @include mdc-helpers.mat-using-mdc-typography($config) {
    @include mdc-icon-button.without-ripple($query: mdc-helpers.$mat-typography-styles-query);
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  .mat-mdc-icon-button {
    @include mdc-icon-button.density($density-scale, $query: mdc-helpers.$mat-base-styles-query);
    @include button-theme-private.touch-target-density($density-scale);
  }
}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-icon-button') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
