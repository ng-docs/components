@use 'sass:map';
@use '@angular/material' as mat;
@use '@material/tooltip/tooltip';
@use '@material/tooltip' as tooltip-theme;

@use '../mdc-core/mdc-helpers/mdc-helpers';

@mixin color($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);
  @include mdc-helpers.mat-using-mdc-theme($config) {
    @include tooltip.core-styles($query: mdc-helpers.$mat-theme-styles-query);
    // We are defining our own tooltip background color because of concerns
    // surrounding the 0.6 background color opacity of the MDC tooltip styles.
    @include tooltip-theme.fill-color(
      map.get(mat.$light-theme-background-palette, tooltip)
    );
  }
}

@mixin typography($config-or-theme) {
  $config: mat.private-typography-to-2018-config(
      mat.get-typography-config($config-or-theme));
  @include mdc-helpers.mat-using-mdc-typography($config) {
    @include tooltip.core-styles($query: mdc-helpers.$mat-typography-styles-query);
  }
}

@mixin density($config-or-theme) {
  $density-scale: mat.get-density-config($config-or-theme);
}

@mixin theme($theme-or-color-config) {
  $theme: mat.private-legacy-get-theme($theme-or-color-config);
  @include mat.private-check-duplicate-theme-styles($theme, 'mat-mdc-tooltip') {
    $color: mat.get-color-config($theme);
    $density: mat.get-density-config($theme);
    $typography: mat.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
