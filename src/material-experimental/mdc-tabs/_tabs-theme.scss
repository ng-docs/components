@use 'sass:map';
@use '@material/theme/theme-color' as mdc-theme-color;
@use '@material/theme/theme' as mdc-theme;
@use '@material/tab-indicator' as mdc-tab-indicator;
@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;
@use '@material/tab' as mdc-tab;
@use '@material/tab/tab-theme' as mdc-tab-theme;
@use '@material/tab-bar' as mdc-tab-bar;
@use '../mdc-helpers/mdc-helpers';
@use '../../material/core/typography/typography';
@use '../../material/core/theming/theming';

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  $primary: theming.get-color-from-palette(map.get($config, primary));
  $accent: theming.get-color-from-palette(map.get($config, accent));
  $warn: theming.get-color-from-palette(map.get($config, warn));

  @include mdc-helpers.mat-using-mdc-theme($config) {
    .mat-mdc-tab, .mat-mdc-tab-link {
      $surface: mdc-theme-color.$surface;
      $on-surface: rgba(mdc-theme-color.$on-surface, 0.6);

      // TODO(crisbeto): these styles should actually be set through the `theme` mixin while the
      // `theme-styles` are included in the `tab` mixin inside `_tabs-common.scss`. Currently
      // they are not, because `theme-styles` outputs the token values directly, rather than
      // generating CSS variables.
      @include mdc-tab-theme.primary-navigation-tab-theme-styles(map.merge(
          mdc-tab-theme.$primary-light-theme,
          (
            container-color: $surface,
            inactive-focus-state-layer-color: $on-surface,
            inactive-hover-state-layer-color: $on-surface,
            inactive-pressed-state-layer-color: $on-surface,
            with-icon-inactive-focus-icon-color: $on-surface,
            with-icon-inactive-hover-icon-color: $on-surface,
            with-icon-inactive-icon-color: $on-surface,
            with-icon-inactive-pressed-icon-color: $on-surface,
            with-label-text-inactive-focus-label-text-color: $on-surface,
            with-label-text-inactive-hover-label-text-color: $on-surface,
            with-label-text-inactive-label-text-color: $on-surface,
            with-label-text-inactive-pressed-label-text-color: $on-surface,

            // TODO(crisbeto): MDC's styles are set up so that the icon size is set through a
            // `font-size` at the root of the tab while the text size of the tab is set on
            // `.mdc-tab__text-label` which overrides the one from the root. The problem is that
            // the `$light-theme` is looking for a `subhead2` level which doesn't exist in MDC's
            // code which in turn causes no text label styles to be emitted and for the icon size
            // to be applied to the entire tab. Since we don't support icons inside the tab
            // anyway, we can temporarily work around it by preventing MDC from emitting icon
            // styles. The correct label typography will be applied by our theme instead.
            with-icon-icon-size: null
          )));

      // MDC seems to include a background color on tabs which only stands out on dark themes.
      // Disable for now for backwards compatibility. These styles are inside the theme in order
      // to avoid CSS specificity issues.
      background-color: transparent;
    }

    @include _palette-styles($primary);

    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {
      &.mat-accent {
        @include _palette-styles($accent);
      }

      &.mat-warn {
        @include _palette-styles($warn);
      }
    }

    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {
      &.mat-background-primary {
        @include _background(primary, on-primary);
      }

      &.mat-background-accent {
        @include _background(secondary, on-secondary);
      }

      &.mat-background-warn {
        @include _background(error, on-error);
      }
    }

    .mat-mdc-tab-header-pagination-chevron {
      @include mdc-theme.prop(border-color, on-surface);
    }
  }
}

@mixin _background($background-color, $foreground-color) {
  // Note that these selectors target direct descendants so
  // that the styles don't apply to any nested tab groups.

  > .mat-mdc-tab-header, > .mat-mdc-tab-link-container, > .mat-mdc-tab-header-pagination {
    // Set background color for the tab group
    @include mdc-theme.prop(background-color, $background-color);
  }

  > .mat-mdc-tab-header, > .mat-mdc-tab-link-container {
    // Set labels to contrast against background
    .mat-mdc-tab .mdc-tab__text-label, .mat-mdc-tab-link .mdc-tab__text-label {
      @include mdc-theme.prop(color, $foreground-color);
    }

    .mdc-tab-indicator__content--underline,
    .mat-mdc-tab-header-pagination-chevron,
    .mat-mdc-focus-indicator::before {
      @include mdc-theme.prop(border-color, $foreground-color);
    }
  }

  > .mat-mdc-tab-header, > .mat-mdc-tab-link-container, > .mat-mdc-tab-header-pagination {
    .mat-ripple-element, .mdc-tab__ripple::before {
      @include mdc-theme.prop(background-color, $foreground-color);
    }

    .mat-mdc-tab-header-pagination-chevron {
      @include mdc-theme.prop(border-color, $foreground-color);
    }
  }
}

@mixin _palette-styles($color) {
  .mat-mdc-tab, .mat-mdc-tab-link {
    // TODO(crisbeto): these styles should actually be set through the `theme` mixin while the
    // `theme-styles` are included in the `tab` mixin inside `_tabs-common.scss`. Currently
    // they are not, because `theme-styles` outputs the token values directly, rather than
    // generating CSS variables.
    @include mdc-tab-theme.primary-navigation-tab-theme-styles((
      active-focus-state-layer-color: $color,
      active-hover-state-layer-color: $color,
      active-pressed-state-layer-color: $color,
      with-icon-active-focus-icon-color: $color,
      with-icon-active-hover-icon-color: $color,
      with-icon-active-icon-color: $color,
      with-icon-active-pressed-icon-color: $color,
      with-label-text-active-focus-label-text-color: $color,
      with-label-text-active-hover-label-text-color: $color,
      with-label-text-active-label-text-color: $color,
      with-label-text-active-pressed-label-text-color: $color,
    ));

    @include mdc-tab-indicator-theme.theme-styles((
      active-indicator-color: $color
    ));
  }

  .mdc-tab__ripple::before,
  .mat-mdc-tab .mat-ripple-element,
  .mat-mdc-tab-header-pagination .mat-ripple-element,
  .mat-mdc-tab-link .mat-ripple-element {
    @include mdc-theme.prop(background-color, $color);
  }
}

@mixin typography($config-or-theme) {
  $config: typography.private-typography-to-2018-config(
      theming.get-typography-config($config-or-theme));
  @include mdc-helpers.mat-using-mdc-typography($config) {
    @include mdc-tab.without-ripple($query: mdc-helpers.$mat-typography-styles-query);
    @include mdc-tab-indicator.core-styles($query: mdc-helpers.$mat-typography-styles-query);
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  .mat-mdc-tab-header {
    @include mdc-tab-bar.density($density-scale, $query: mdc-helpers.$mat-base-styles-query);
  }
}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-tabs') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}

