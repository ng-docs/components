@use '@material/fab' as mdc-fab;
@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;
@use '@material/fab/fab-theme' as mdc-fab-theme;
@use '@material/elevation/elevation-theme' as mdc-elevation-theme;
@use '@material/theme/custom-properties' as mdc-custom-properties;

@use './button-base';
@use '../core/mdc-helpers/mdc-helpers';
@use '../core/style/private' as style-private;
@use '../core/focus-indicators/private' as focus-indicators-private;
@use '../core/tokens/m2/mdc/extended-fab' as m2-mdc-extended-fab;
@use '../core/tokens/m2/mdc/fab' as m2-mdc-fab;

@include mdc-custom-properties.configure($emit-fallback-values: false, $emit-fallback-vars: false) {
  $mdc-fab-token-slots: m2-mdc-fab.get-token-slots();
  $mdc-extended-fab-token-slots: m2-mdc-extended-fab.get-token-slots();

  // Add the MDC fab static styles.
  @include mdc-fab.static-styles();

  // Add default values for tokens that aren't outputted by the theming API.
  .mat-mdc-fab, .mat-mdc-mini-fab {
    // Add the official slots for the MDC fab.
    @include mdc-fab-theme.theme-styles($mdc-fab-token-slots);

    // Add default values for tokens that aren't outputted by the theming API.
    @include mdc-fab-theme.theme(m2-mdc-fab.get-unthemable-tokens());
  }

  .mat-mdc-extended-fab {
    // Add the official slots for the MDC fab.
    @include mdc-extended-fab-theme.theme-styles($mdc-extended-fab-token-slots);

    // Add default values for tokens that aren't outputted by the theming API.
    @include mdc-extended-fab-theme.theme(m2-mdc-extended-fab.get-unthemable-tokens());
  }
}

.mat-mdc-fab, .mat-mdc-mini-fab {
  @include button-base.mat-private-button-interactive();
  @include button-base.mat-private-button-touch-target(true);
  @include style-private.private-animation-noop();

  @include mdc-helpers.disable-mdc-fallback-declarations {
    // TODO(crisbeto): the elevation can be controlled using `container-elevation` in `theme-styles`
    // however when it is passed in, MDC throws an error that `container-shadow-color` isn't
    // passed in. When `container-shadow-color` is passed in, MDC throws another error, because
    // the produced value isn't valid CSS. Eventually we should switch to it once it's fixed.
    @include mdc-elevation-theme.elevation(6);

    &:hover, &:focus {
      @include mdc-elevation-theme.elevation(8);
    }

    &:active, &:focus:active {
      @include mdc-elevation-theme.elevation(12);
    }

    @include button-base.mat-private-button-disabled {
      @include mdc-elevation-theme.elevation(0);
    }
  }

  // TODO(crisbeto): `theme-styles` doesn't allow for the color to be controlled. Define a custom
  // variable for now so we have something to target.
  color: var(--mat-mdc-fab-color, inherit);

  // Prevent the button from shrinking since it's always supposed to be a circle.
  flex-shrink: 0;

  // MDC adds some styles to fab and mini-fab that conflict with some of our focus indicator
  // styles and don't actually do anything. This undoes those conflicting styles.
  &:not(.mdc-ripple-upgraded):focus::before {
    background: transparent;
    opacity: 1;
  }

  // MDC expects the fab icon to contain this HTML content:
  // ```html
  //   <span class="mdc-fab__icon material-icons">favorite</span>
  // ```
  // However, Angular Material expects a `mat-icon` instead. The following
  // mixin will style the icons appropriately.
  // stylelint-disable-next-line selector-class-pattern
  .mat-icon, .material-icons {
    @include mdc-fab.icon_();
  }

  .mat-mdc-focus-indicator::before {
    $default-border-width: focus-indicators-private.$default-border-width;
    $border-width: var(--mat-mdc-focus-indicator-border-width, #{$default-border-width});
    $offset: calc(#{$border-width} + 2px);
    margin: calc(#{$offset} * -1);
  }
}

.mat-mdc-extended-fab {
  & > .mat-icon,
  & > .material-icons {  // stylelint-disable-line selector-class-pattern
    @include mdc-fab.extended-icon-padding(
      mdc-fab.$extended-icon-padding,
      mdc-fab.$extended-label-padding
    );
  }

  // For Extended FAB with text label followed by icon.
  // We are checking for the a button class because white this is a FAB it
  // uses the same template as button.
  // stylelint-disable-next-line selector-class-pattern
  .mdc-button__label + .mat-icon, .mdc-button__label + .material-icons {
    @include mdc-fab.extended-icon-padding(
      mdc-fab.$extended-icon-padding,
      mdc-fab.$extended-label-padding,
      $is-icon-at-end: true
    );
  }
}

// All FABs are square except the extended ones so we
// need to set the touch target back to full-width.
.mat-mdc-extended-fab .mat-mdc-button-touch-target {
  width: 100%;
}
