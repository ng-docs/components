@use 'sass:math';
@use '../../style/checkbox-common';
@use '../../style/private';
@use '../../style/variables';

// Padding inside of a pseudo checkbox.
$_padding: checkbox-common.$border-width * 2;

// Size of the checkmark in a pseudo checkbox.
$_checkmark-size: checkbox-common.$size - (2 * $_padding);


.mat-pseudo-checkbox {
  width: checkbox-common.$size;
  height: checkbox-common.$size;
  border: checkbox-common.$border-width solid;
  border-radius: 2px;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  position: relative;
  flex-shrink: 0;
  transition: border-color checkbox-common.$transition-duration
    variables.$linear-out-slow-in-timing-function, background-color
    checkbox-common.$transition-duration variables.$linear-out-slow-in-timing-function;

  // Used to render the checkmark/mixedmark inside of the box.
  &::after {
    position: absolute;
    opacity: 0;
    content: '';
    border-bottom: checkbox-common.$border-width solid currentColor;
    transition: opacity checkbox-common.$transition-duration
      variables.$linear-out-slow-in-timing-function;
  }

  &.mat-pseudo-checkbox-checked, &.mat-pseudo-checkbox-indeterminate {
    border-color: transparent;
  }

  @include private.private-animation-noop {
    &::after {
      transition: none;
    }
  }
}

.mat-pseudo-checkbox-disabled {
  cursor: default;
}

.mat-pseudo-checkbox-indeterminate::after {
  top: math.div(checkbox-common.$size - checkbox-common.$border-width, 2) -
      checkbox-common.$border-width;
  left: math.div(checkbox-common.$border-width, 2);
  width: checkbox-common.$size - 6px;
  opacity: 1;
  border-radius: 2px;
}

.mat-pseudo-checkbox-checked::after {
  top: math.div(checkbox-common.$size, 2) - math.div($_checkmark-size, 4) -
       math.div(checkbox-common.$size, 10) - checkbox-common.$border-width;
  left: $_padding - checkbox-common.$border-width * 1.5;
  width: $_checkmark-size;
  height: math.div($_checkmark-size - checkbox-common.$border-width, 2);
  border-left: checkbox-common.$border-width solid currentColor;
  transform: rotate(-45deg);
  opacity: 1;
  box-sizing: content-box;
}
